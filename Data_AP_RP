%% AP data preprocessing (recording relative position)
% 96 channels 

clc
clear
close all

load("ap_filterdata1114.mat")

threshold_val = [ 150 100 160 110 110 170 130 155 260 290 560 205 205 400 ...
    140 200 350 350 200 200 100 250 150 190 100 230 230 200 160 230 160 500 ...
    110 150 120 110 140 140 180 110 110 480 480 165 60 355 330 170 200 290 ...
    150 150 190 190 240 165 165 250 140 230 360 290 80 130 130 100 95 120  ...
    110 120 100 130 85 130 60 60 150 250 145 160 170 185 60 60 130 80 260 ...
    70 95 180 165 155 240 115 130 155];


bin = 60; 
num_chan = size(ap_filterdata,1);
num_bin = ceil(size(ap_filterdata,2)/bin);
leng_data = size(ap_filterdata,2);
ap_downdata = zeros(num_chan,num_bin); 


%% threshold judgment and downsampling
last_spike_global_index = -inf;
last_spike_value = inf;
last_spike_chan = 0;

for i = 1:num_chan  
    for j = 1:num_bin
        bin_start = (j-1)*bin+1;
        bin_end = min(j*bin, leng_data);
        judg_data = ap_filterdata(i, bin_start:bin_end); 

        % threshold judgment
        if any(judg_data < -threshold_val(i)) 
            [min_val, spike_index] = min(judg_data); 
            global_index = bin_start + spike_index - 1; 

            if i == last_spike_chan && global_index - last_spike_global_index < 60
                if min_val < last_spike_value
                    relative_position = calculateRelativePosition(spike_index);
                    ap_downdata(i, j) = relative_position;
                    last_spike_value = min_val;
                    last_spike_global_index = global_index;
                else
                    ap_downdata(i, j) = 0;
                end
            else
                relative_position = calculateRelativePosition(spike_index);
                ap_downdata(i, j) = relative_position;
                last_spike_value = min_val;
                last_spike_global_index = global_index;
                last_spike_chan = i;
            end
        else
            ap_downdata(i, j) = 0;
        end
    end
end


%% Calculate relative position
function relative_position = calculateRelativePosition(spike_index)
    offset = spike_index - 29.5;
    if offset < 0
        relative_position = floor(offset); %负数时舍弃小数
    else
        relative_position = ceil(offset); % 正数时四舍五入
    end
end
